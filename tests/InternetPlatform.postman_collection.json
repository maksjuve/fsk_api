{
	"info": {
		"_postman_id": "7f5c807d-d173-4de3-b2a2-dc0d7048e352",
		"name": "InternetPlatform",
		"description": "Выгрузки на интернет площадки",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "CIAN",
			"item": [
				{
					"name": "cian_garage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{path}}/hs/FSK_API/AdvertisingRealty/cian/garage",
							"host": [
								"{{path}}"
							],
							"path": [
								"hs",
								"FSK_API",
								"AdvertisingRealty",
								"cian",
								"garage"
							]
						}
					},
					"response": []
				},
				{
					"name": "cian_commercial",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{path}}/hs/FSK_API/AdvertisingRealty/cian/commercial",
							"host": [
								"{{path}}"
							],
							"path": [
								"hs",
								"FSK_API",
								"AdvertisingRealty",
								"cian",
								"commercial"
							]
						}
					},
					"response": []
				},
				{
					"name": "cian_newFlat",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"The response has at least One free flat\", () => {\r",
									"    //parse the response json and test three properties\r",
									"    let jsonBody = xml2Json(responseBody);\r",
									"    pm.expect(jsonBody[\"feed\"]['object'].length).to.be.above(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{path}}/hs/FSK_API/AdvertisingRealty/cian/newflat",
							"host": [
								"{{path}}"
							],
							"path": [
								"hs",
								"FSK_API",
								"AdvertisingRealty",
								"cian",
								"newflat"
							]
						}
					},
					"response": []
				},
				{
					"name": "cianZoom_newFlat",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{path}}/hs/FSK_API/AdvertisingRealty/cianzoom/newflat",
							"host": [
								"{{path}}"
							],
							"path": [
								"hs",
								"FSK_API",
								"AdvertisingRealty",
								"cianzoom",
								"newflat"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "YANDEX",
			"item": [
				{
					"name": "yandex_performanceZoom",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{path}}/hs/FSK_API/AdvertisingRealty/yandexPerformanceZoom/newflat",
							"host": [
								"{{path}}"
							],
							"path": [
								"hs",
								"FSK_API",
								"AdvertisingRealty",
								"yandexPerformanceZoom",
								"newflat"
							]
						}
					},
					"response": []
				},
				{
					"name": "yandex_performanceMoskovskyi",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{path}}/hs/FSK_API/AdvertisingRealty/yandexPerformanceMoskovskyi/newflat",
							"host": [
								"{{path}}"
							],
							"path": [
								"hs",
								"FSK_API",
								"AdvertisingRealty",
								"yandexPerformanceMoskovskyi",
								"newflat"
							]
						}
					},
					"response": []
				},
				{
					"name": "yandex_performancePushkinkyi",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{path}}/hs/FSK_API/AdvertisingRealty/yandexPerformancePushkinkyi/newflat",
							"host": [
								"{{path}}"
							],
							"path": [
								"hs",
								"FSK_API",
								"AdvertisingRealty",
								"yandexPerformancePushkinkyi",
								"newflat"
							]
						}
					},
					"response": []
				},
				{
					"name": "yandex_garage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{path}}/hs/FSK_API/AdvertisingRealty/yandex/garage",
							"host": [
								"{{path}}"
							],
							"path": [
								"hs",
								"FSK_API",
								"AdvertisingRealty",
								"yandex",
								"garage"
							]
						}
					},
					"response": []
				},
				{
					"name": "yandex_commercial",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{path}}/hs/FSK_API/AdvertisingRealty/yandex/commercial",
							"host": [
								"{{path}}"
							],
							"path": [
								"hs",
								"FSK_API",
								"AdvertisingRealty",
								"yandex",
								"commercial"
							]
						}
					},
					"response": []
				},
				{
					"name": "yandex_newFlat",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"The response has at least One free flat\", () => {\r",
									"    //parse the response json and test three properties\r",
									"    let jsonBody = xml2Json(responseBody);\r",
									"    pm.expect(jsonBody[\"realty-feed\"]['offer'].length).to.be.above(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{path}}/hs/FSK_API/AdvertisingRealty/yandex/newflat",
							"host": [
								"{{path}}"
							],
							"path": [
								"hs",
								"FSK_API",
								"AdvertisingRealty",
								"yandex",
								"newflat"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "InternetSite",
			"item": [
				{
					"name": "fsknw_siteCommercial",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{path}}/hs/FSK_API/siteIntegration/commercial",
							"host": [
								"{{path}}"
							],
							"path": [
								"hs",
								"FSK_API",
								"siteIntegration",
								"commercial"
							]
						}
					},
					"response": []
				},
				{
					"name": "fsknw_agencyCommercial",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{path}}/hs/FSK_API/agency/commercial",
							"host": [
								"{{path}}"
							],
							"path": [
								"hs",
								"FSK_API",
								"agency",
								"commercial"
							]
						}
					},
					"response": []
				},
				{
					"name": "fsknw_siteNewflat",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"The response has at least One free flat\", () => {\r",
									"    //parse the response json and test three properties\r",
									"    let jsonBody = xml2Json(responseBody);\r",
									"    pm.expect(jsonBody[\"realty-feed\"]['offer'].length).to.be.above(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{path}}/hs/FSK_API/siteIntegration/newflat",
							"host": [
								"{{path}}"
							],
							"path": [
								"hs",
								"FSK_API",
								"siteIntegration",
								"newflat"
							]
						}
					},
					"response": []
				},
				{
					"name": "fsknw_agencyNewflat",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"The response has at least One free flat\", () => {\r",
									"    //parse the response json and test three properties\r",
									"    let jsonBody = xml2Json(responseBody);\r",
									"    pm.expect(jsonBody[\"realty-feed\"]['offer'].length).to.be.above(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{path}}/hs/FSK_API/agency/newflat",
							"host": [
								"{{path}}"
							],
							"path": [
								"hs",
								"FSK_API",
								"agency",
								"newflat"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "domclick",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"The response has at least One free flat\", () => {\r",
							"    //parse the response json and test three properties\r",
							"    let jsonBody = xml2Json(responseBody);\r",
							"    let complex = jsonBody[\"complexes\"][\"complex\"];\r",
							"\r",
							"    if (complex.length == undefined) {\r",
							"        pm.expect(complex.hasOwnProperty(\"id\")).to.eql(true);    \r",
							"    } else {\r",
							"        pm.expect(complex.length).to.be.above(0);\r",
							"    }\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{path}}/hs/FSK_API/AdvertisingRealty/domclick/newflat",
					"host": [
						"{{path}}"
					],
					"path": [
						"hs",
						"FSK_API",
						"AdvertisingRealty",
						"domclick",
						"newflat"
					]
				}
			},
			"response": []
		},
		{
			"name": "partapart.ru",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{path}}/hs/FSK_API/AdvertisingRealty/partapart/newflat",
					"host": [
						"{{path}}"
					],
					"path": [
						"hs",
						"FSK_API",
						"AdvertisingRealty",
						"partapart",
						"newflat"
					]
				}
			},
			"response": []
		},
		{
			"name": "piterRealty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"The response has at least One free flat\", () => {\r",
							"    //parse the response json and test three properties\r",
							"    let jsonBody = xml2Json(responseBody);\r",
							"    pm.expect(jsonBody[\"complexes\"]['complex'].length).to.be.above(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{path}}/hs/FSK_API/AdvertisingRealty/piterRealty/newflat",
					"host": [
						"{{path}}"
					],
					"path": [
						"hs",
						"FSK_API",
						"AdvertisingRealty",
						"piterRealty",
						"newflat"
					]
				}
			},
			"response": []
		},
		{
			"name": "yandex_Profitbase",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"The response has at least One free flat\", () => {\r",
							"    //parse the response json and test three properties\r",
							"    let jsonBody = xml2Json(responseBody);\r",
							"    pm.expect(jsonBody[\"realty-feed\"]['offer'].length).to.be.above(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{path}}/hs/FSK_API/AdvertisingRealty/YandexProfitbase/newflat",
					"host": [
						"{{path}}"
					],
					"path": [
						"hs",
						"FSK_API",
						"AdvertisingRealty",
						"YandexProfitbase",
						"newflat"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "Wer34rd56",
				"type": "string"
			},
			{
				"key": "username",
				"value": "itservice",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}
